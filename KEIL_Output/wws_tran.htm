<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\KEIL_Output\wws_tran.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\KEIL_Output\wws_tran.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6190004: Last Updated: Sat Apr 20 16:44:35 2024
<BR><P>
<H3>Maximum Stack Usage =        464 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; sFUNC_Init2d4GHz &rArr; sDRV_Si24R1_IrqHandler &rArr; sDRV_UART_Printf &rArr; UART_WaitOnFlagUntilTimeout
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[11]">ADC1_COMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">ADC1_COMP_IRQHandler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[11]">ADC1_COMP_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[e]">DMA1_Channel1_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[f]">DMA1_Channel2_3_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[10]">DMA1_Channel4_5_6_7_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[b]">EXTI0_1_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[c]">EXTI2_3_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[d]">EXTI4_15_IRQHandler</a> from lto-llvm-e98f47.o(.text.EXTI4_15_IRQHandler) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[9]">FLASH_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from lto-llvm-e98f47.o(.text.HardFault_Handler) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[16]">I2C1_IRQHandler</a> from lto-llvm-e98f47.o(.text.I2C1_IRQHandler) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[1e]">I2C_DMAAbort</a> from lto-llvm-e98f47.o(.text.I2C_DMAAbort) referenced from lto-llvm-e98f47.o(.text.I2C_ITError)
 <LI><a href="#[1c]">I2C_Master_ISR_IT</a> from lto-llvm-e98f47.o(.text.I2C_Master_ISR_IT) referenced from lto-llvm-e98f47.o(.text.HAL_I2C_Master_Seq_Transmit_IT)
 <LI><a href="#[1c]">I2C_Master_ISR_IT</a> from lto-llvm-e98f47.o(.text.I2C_Master_ISR_IT) referenced from lto-llvm-e98f47.o(.text.main)
 <LI><a href="#[1c]">I2C_Master_ISR_IT</a> from lto-llvm-e98f47.o(.text.I2C_Master_ISR_IT) referenced from lto-llvm-e98f47.o(.text.sDRV_BMP280_Init)
 <LI><a href="#[1d]">I2C_Slave_ISR_IT</a> from lto-llvm-e98f47.o(.text.I2C_Slave_ISR_IT) referenced from lto-llvm-e98f47.o(.text.I2C_ITError)
 <LI><a href="#[12]">LPTIM1_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[19]">LPUART1_IRQHandler</a> from lto-llvm-e98f47.o(.text.LPUART1_IRQHandler) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from lto-llvm-e98f47.o(.text.NMI_Handler) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[7]">PVD_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from lto-llvm-e98f47.o(.text.PendSV_Handler) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[a]">RCC_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[8]">RTC_IRQHandler</a> from lto-llvm-e98f47.o(.text.RTC_IRQHandler) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[17]">SPI1_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from lto-llvm-e98f47.o(.text.SVC_Handler) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from lto-llvm-e98f47.o(.text.SysTick_Handler) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[14]">TIM21_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[15]">TIM22_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[13]">TIM2_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[1f]">UART_DMAAbortOnError</a> from lto-llvm-e98f47.o(.text.UART_DMAAbortOnError) referenced from lto-llvm-e98f47.o(.text.LPUART1_IRQHandler)
 <LI><a href="#[18]">USART2_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[1b]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32l031xx.o(.text)
 <LI><a href="#[20]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0vsprintf)
 <LI><a href="#[1a]">main</a> from lto-llvm-e98f47.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[1b]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(.text)
</UL>
<P><STRONG><a name="[5e]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[21]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[31]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[5f]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[60]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[61]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[62]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[63]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>ADC1_COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA1_Channel4_5_6_7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIM21_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM22_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sDRV_UART_Printf
</UL>

<P><STRONG><a name="[23]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sDRV_UART_Init
</UL>

<P><STRONG><a name="[64]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[52]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[28]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>

<P><STRONG><a name="[2c]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[2d]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[2e]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2f]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[30]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[5b]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[22]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[65]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[3c]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, uidiv_div0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sDRV_UART_Init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sBSP_SYS_InitRCC
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sBSP_ADC_GetChannel
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>

<P><STRONG><a name="[4c]"></a>__aeabi_uidivmod</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, uidiv_div0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[25]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[66]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[24]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[67]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[29]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_lasr
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[68]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[27]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[35]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>

<P><STRONG><a name="[2b]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[2a]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_l2d
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>

<P><STRONG><a name="[33]"></a>__aeabi_ldivmod</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, ldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = __aeabi_ldivmod &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[50]"></a>__aeabi_lmul</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, llmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_lmul
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[69]"></a>_ll_mul</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, llmul.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[36]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[37]"></a>__aeabi_ui2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[38]"></a>__aeabi_l2d</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, dfltl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = __aeabi_l2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[53]"></a>__aeabi_f2d</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[39]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lto-llvm-e98f47.o(.text.EXTI4_15_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = EXTI4_15_IRQHandler &rArr; sDRV_Si24R1_IrqHandler &rArr; sDRV_UART_Printf &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sDRV_Si24R1_IrqHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-e98f47.o(.text.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>I2C1_IRQHandler</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, lto-llvm-e98f47.o(.text.I2C1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C1_IRQHandler &rArr; I2C_ITError
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITError
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 1048 bytes, Stack size 48 bytes, lto-llvm-e98f47.o(.text.LPUART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LPUART1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAAbortOnError
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-e98f47.o(.text.NMI_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-e98f47.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>RTC_IRQHandler</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, lto-llvm-e98f47.o(.text.RTC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-e98f47.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-e98f47.o(.text.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>main</STRONG> (Thumb, 3852 bytes, Stack size 176 bytes, lto-llvm-e98f47.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = main &rArr; sFUNC_Init2d4GHz &rArr; sDRV_Si24R1_IrqHandler &rArr; sDRV_UART_Printf &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_l2d
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Seq_Receive_IT
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Seq_Transmit_IT
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sDRV_Si24R1_SetIdleTX
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sDRV_BMP280_Init
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sDRV_AHT10_Init
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sDRV_UART_Init
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sBSP_RTC_Init
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sBSP_softI2C_SendData
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sBSP_SYS_InitRCC
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sBSP_ADC_GetChannel
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sBSP_ADC_Init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sDRV_Si24R1_SetStandby
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sDRV_UART_Printf
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFUNC_Init2d4GHz
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[58]"></a>__0vsprintf</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[6a]"></a>__1vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[6b]"></a>__2vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[6c]"></a>__c89vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[56]"></a>vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sDRV_UART_Printf
</UL>

<P><STRONG><a name="[32]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[6d]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[6e]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[6f]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[5a]"></a>_fp_digits</STRONG> (Thumb, 344 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[59]"></a>_printf_core</STRONG> (Thumb, 1754 bytes, Stack size 128 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
</UL>

<P><STRONG><a name="[5d]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[5c]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[20]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0vsprintf)
</UL>
<P><STRONG><a name="[49]"></a>sFUNC_Init2d4GHz</STRONG> (Thumb, 7636 bytes, Stack size 160 bytes, lto-llvm-e98f47.o(.text.sFUNC_Init2d4GHz))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = sFUNC_Init2d4GHz &rArr; sDRV_Si24R1_IrqHandler &rArr; sDRV_UART_Printf &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sDRV_Si24R1_SetStandby
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sDRV_Si24R1_IrqHandler
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sDRV_UART_Printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[44]"></a>sDRV_UART_Printf</STRONG> (Thumb, 212 bytes, Stack size 40 bytes, lto-llvm-e98f47.o(.text.sDRV_UART_Printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sDRV_UART_Printf &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sDRV_Si24R1_IrqHandler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFUNC_Init2d4GHz
</UL>

<P><STRONG><a name="[45]"></a>HAL_GPIO_Init</STRONG> (Thumb, 376 bytes, Stack size 56 bytes, lto-llvm-e98f47.o(.text.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sDRV_BMP280_Init
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sDRV_AHT10_Init
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sDRV_UART_Init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sBSP_ADC_Init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFUNC_Init2d4GHz
</UL>

<P><STRONG><a name="[3a]"></a>sDRV_Si24R1_IrqHandler</STRONG> (Thumb, 1276 bytes, Stack size 56 bytes, lto-llvm-e98f47.o(.text.sDRV_Si24R1_IrqHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = sDRV_Si24R1_IrqHandler &rArr; sDRV_UART_Printf &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sDRV_UART_Printf
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFUNC_Init2d4GHz
</UL>

<P><STRONG><a name="[4a]"></a>sDRV_Si24R1_SetStandby</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, lto-llvm-e98f47.o(.text.sDRV_Si24R1_SetStandby))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sDRV_Si24R1_SetStandby
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFUNC_Init2d4GHz
</UL>

<P><STRONG><a name="[48]"></a>sBSP_ADC_Init</STRONG> (Thumb, 684 bytes, Stack size 64 bytes, lto-llvm-e98f47.o(.text.sBSP_ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = sBSP_ADC_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3b]"></a>HAL_ADC_ConfigChannel</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, lto-llvm-e98f47.o(.text.HAL_ADC_ConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_ADC_ConfigChannel &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sBSP_ADC_GetChannel
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sBSP_ADC_Init
</UL>

<P><STRONG><a name="[51]"></a>sBSP_ADC_GetChannel</STRONG> (Thumb, 380 bytes, Stack size 32 bytes, lto-llvm-e98f47.o(.text.sBSP_ADC_GetChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sBSP_ADC_GetChannel &rArr; HAL_ADC_ConfigChannel &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[41]"></a>sBSP_SYS_InitRCC</STRONG> (Thumb, 436 bytes, Stack size 112 bytes, lto-llvm-e98f47.o(.text.sBSP_SYS_InitRCC))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = sBSP_SYS_InitRCC &rArr; HAL_RCC_OscConfig &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3d]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1276 bytes, Stack size 48 bytes, lto-llvm-e98f47.o(.text.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_RCC_OscConfig &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sBSP_RTC_Init
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sBSP_SYS_InitRCC
</UL>

<P><STRONG><a name="[54]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 344 bytes, Stack size 48 bytes, lto-llvm-e98f47.o(.text.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sBSP_RTC_Init
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sBSP_SYS_InitRCC
</UL>

<P><STRONG><a name="[4d]"></a>sBSP_softI2C_SendData</STRONG> (Thumb, 368 bytes, Stack size 36 bytes, lto-llvm-e98f47.o(.text.sBSP_softI2C_SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = sBSP_softI2C_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sDRV_AHT10_Init
</UL>

<P><STRONG><a name="[43]"></a>sBSP_RTC_Init</STRONG> (Thumb, 320 bytes, Stack size 104 bytes, lto-llvm-e98f47.o(.text.sBSP_RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = sBSP_RTC_Init &rArr; HAL_RCC_OscConfig &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[42]"></a>sDRV_UART_Init</STRONG> (Thumb, 1332 bytes, Stack size 56 bytes, lto-llvm-e98f47.o(.text.sDRV_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = sDRV_UART_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[46]"></a>sDRV_AHT10_Init</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, lto-llvm-e98f47.o(.text.sDRV_AHT10_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = sDRV_AHT10_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sBSP_softI2C_SendData
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[47]"></a>sDRV_BMP280_Init</STRONG> (Thumb, 636 bytes, Stack size 88 bytes, lto-llvm-e98f47.o(.text.sDRV_BMP280_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = sDRV_BMP280_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Seq_Receive_IT
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Master_Seq_Transmit_IT
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4b]"></a>sDRV_Si24R1_SetIdleTX</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, lto-llvm-e98f47.o(.text.sDRV_Si24R1_SetIdleTX))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sDRV_Si24R1_SetIdleTX
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4e]"></a>HAL_I2C_Master_Seq_Transmit_IT</STRONG> (Thumb, 156 bytes, Stack size 20 bytes, lto-llvm-e98f47.o(.text.HAL_I2C_Master_Seq_Transmit_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_I2C_Master_Seq_Transmit_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sDRV_BMP280_Init
</UL>

<P><STRONG><a name="[4f]"></a>HAL_I2C_Master_Seq_Receive_IT</STRONG> (Thumb, 168 bytes, Stack size 28 bytes, lto-llvm-e98f47.o(.text.HAL_I2C_Master_Seq_Receive_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_I2C_Master_Seq_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sDRV_BMP280_Init
</UL>

<P><STRONG><a name="[1c]"></a>I2C_Master_ISR_IT</STRONG> (Thumb, 548 bytes, Stack size 32 bytes, lto-llvm-e98f47.o(.text.I2C_Master_ISR_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = I2C_Master_ISR_IT &rArr; I2C_ITMasterSeqCplt
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITMasterSeqCplt
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITError
</UL>
<BR>[Address Reference Count : 3]<UL><LI> lto-llvm-e98f47.o(.text.main)
<LI> lto-llvm-e98f47.o(.text.sDRV_BMP280_Init)
<LI> lto-llvm-e98f47.o(.text.HAL_I2C_Master_Seq_Transmit_IT)
</UL>
<P><STRONG><a name="[1f]"></a>UART_DMAAbortOnError</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-e98f47.o(.text.UART_DMAAbortOnError))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e98f47.o(.text.LPUART1_IRQHandler)
</UL>
<P><STRONG><a name="[3e]"></a>I2C_ITError</STRONG> (Thumb, 304 bytes, Stack size 16 bytes, lto-llvm-e98f47.o(.text.I2C_ITError))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_ITError
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DMAAbort
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_IRQHandler
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Slave_ISR_IT
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Master_ISR_IT
</UL>

<P><STRONG><a name="[55]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 268 bytes, Stack size 32 bytes, lto-llvm-e98f47.o(.text.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sDRV_UART_Init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sDRV_UART_Printf
</UL>

<P><STRONG><a name="[3f]"></a>I2C_ITMasterSeqCplt</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, lto-llvm-e98f47.o(.text.I2C_ITMasterSeqCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_ITMasterSeqCplt
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Master_ISR_IT
</UL>

<P><STRONG><a name="[1e]"></a>I2C_DMAAbort</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, lto-llvm-e98f47.o(.text.I2C_DMAAbort))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITError
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e98f47.o(.text.I2C_ITError)
</UL>
<P><STRONG><a name="[1d]"></a>I2C_Slave_ISR_IT</STRONG> (Thumb, 956 bytes, Stack size 48 bytes, lto-llvm-e98f47.o(.text.I2C_Slave_ISR_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = I2C_Slave_ISR_IT &rArr; I2C_ITSlaveSeqCplt
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITSlaveSeqCplt
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITError
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e98f47.o(.text.I2C_ITError)
</UL>
<P><STRONG><a name="[40]"></a>I2C_ITSlaveSeqCplt</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, lto-llvm-e98f47.o(.text.I2C_ITSlaveSeqCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_ITSlaveSeqCplt
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Slave_ISR_IT
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
